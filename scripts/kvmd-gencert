#!/bin/bash
# ========================================================================== #
#                                                                            #
#    KVMD - The main PiKVM daemon.                                           #
#                                                                            #
#    Copyright (C) 2018-2024  Maxim Devaev <mdevaev@gmail.com>               #
#                                                                            #
#    This program is free software: you can redistribute it and/or modify    #
#    it under the terms of the GNU General Public License as published by    #
#    the Free Software Foundation, either version 3 of the License, or       #
#    (at your option) any later version.                                     #
#                                                                            #
#    This program is distributed in the hope that it will be useful,         #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of          #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           #
#    GNU General Public License for more details.                            #
#                                                                            #
#    You should have received a copy of the GNU General Public License       #
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.  #
#                                                                            #
# ========================================================================== #

set -e
export LC_ALL=C

if [ "$(whoami)" != root ]; then
	echo "Only root can do that"
	exit 1
fi

if [ "$1" != --do-the-thing ]; then
	echo "This script will generate new self-signed SSL certificates for KVMD Nginx"
	echo "and put them to /etc/kvmd/nginx/ssl. If you're sure of what you're doing,"
	echo "append the option '--do-the-thing' to execute. You can also append --vnc"
	echo "to generate a certificate for VNC not for Nginx."
	exit 1
fi

target=nginx
if [ "$2" == --vnc ]; then
	target=vnc
fi
path="/etc/kvmd/$target/ssl"

set -e

#Read Serial Number or use default all-zeros
get_serial_number() {
    serialnumber=$(cat /proc/device-tree/serial-number 2>/dev/null || echo "0000000000000000")
    echo "$serialnumber"
}
serial=$(get_serial_number)
san="DNS:pikvm-${serial}.local"

# Function to fetch IP addresses
get_ip_addresses() {
	ip address | awk '/inet / {print $2}' | cut -d/ -f1
}

# Try to get IP addresses
ip_addresses=$(get_ip_addresses || true)
set +e

# Update SAN variable for IP certs
for ip in $ip_addresses; do
	san="${san},IP:${ip}"
done

set -x

mkdir -p "$path"
rm -f "$path"/*
cd "$path"

# Generate the OpenSSL configuration file for SAN
cat >openssl.cnf <<EOL
[ req ]
distinguished_name = req_distinguished_name
x509_extensions = v3_req
prompt = no

[ req_distinguished_name ]
C = RU
ST = Moscow
L = Moscow
O = PiKVM
OU = PiKVM
CN = localhost

[ v3_req ]
subjectAltName = ${san}
EOL

# Generate the ECC key and self-signed certificate with SAN
openssl ecparam -out server.key -name prime256v1 -genkey
openssl req -new -x509 -sha256 -nodes -key server.key -out server.crt -days 3650 -config openssl.cnf

chown "root:kvmd-$target" "$path"/*
chmod 440 "$path/server.key"
chmod 444 "$path/server.crt"
chmod 755 "$path"

# Clean up
rm -f openssl.cnf
